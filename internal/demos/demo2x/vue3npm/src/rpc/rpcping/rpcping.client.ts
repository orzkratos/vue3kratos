// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "rpcping/rpcping.proto" (package "api.rpcping", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Rpcping } from "./rpcping";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { StringValue } from "../google/protobuf/wrappers";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
import { executeGrtp } from '@yyle88/grpt/src/grpcviahttp';
import type { GrtpPromise } from '@yyle88/grpt/src/grpcviahttp';
/**
 * @generated from protobuf service api.rpcping.Rpcping
 */
export interface IRpcpingClient {
    /**
     * @generated from protobuf rpc: Ping
     */
    ping(input: StringValue, options?: RpcOptions): GrtpPromise<StringValue, StringValue>;
}
/**
 * @generated from protobuf service api.rpcping.Rpcping
 */
export class RpcpingClient implements IRpcpingClient, ServiceInfo {
    typeName = Rpcping.typeName;
    methods = Rpcping.methods;
    options = Rpcping.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Ping
     */
    ping(input: StringValue, options?: RpcOptions): GrtpPromise<StringValue, StringValue> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return executeGrtp<StringValue, StringValue>("unary", this._transport, method, opt, input);
    }
}
