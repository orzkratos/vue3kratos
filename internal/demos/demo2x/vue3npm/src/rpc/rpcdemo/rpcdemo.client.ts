// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "rpcdemo/rpcdemo.proto" (package "api.rpcdemo", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Rpcdemo } from "./rpcdemo";
import type { SelectRpcDemoReply } from "./rpcdemo";
import type { SelectRpcDemoRequest } from "./rpcdemo";
import type { UpdateRpcDemoReply } from "./rpcdemo";
import type { UpdateRpcDemoRequest } from "./rpcdemo";
import type { DeleteRpcDemoReply } from "./rpcdemo";
import type { DeleteRpcDemoRequest } from "./rpcdemo";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CreateRpcDemoReply } from "./rpcdemo";
import type { CreateRpcDemoRequest } from "./rpcdemo";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
import { executeGrtp } from '@yyle88/grpt/src/grpcviahttp';
import type { GrtpPromise } from '@yyle88/grpt/src/grpcviahttp';
/**
 * @generated from protobuf service api.rpcdemo.Rpcdemo
 */
export interface IRpcdemoClient {
    /**
     * @generated from protobuf rpc: CreateRpcDemo
     */
    createRpcDemo(input: CreateRpcDemoRequest, options?: RpcOptions): GrtpPromise<CreateRpcDemoRequest, CreateRpcDemoReply>;
    /**
     * @generated from protobuf rpc: DeleteRpcDemo
     */
    deleteRpcDemo(input: DeleteRpcDemoRequest, options?: RpcOptions): GrtpPromise<DeleteRpcDemoRequest, DeleteRpcDemoReply>;
    /**
     * @generated from protobuf rpc: UpdateRpcDemo
     */
    updateRpcDemo(input: UpdateRpcDemoRequest, options?: RpcOptions): GrtpPromise<UpdateRpcDemoRequest, UpdateRpcDemoReply>;
    /**
     * @generated from protobuf rpc: SelectRpcDemo
     */
    selectRpcDemo(input: SelectRpcDemoRequest, options?: RpcOptions): GrtpPromise<SelectRpcDemoRequest, SelectRpcDemoReply>;
}
/**
 * @generated from protobuf service api.rpcdemo.Rpcdemo
 */
export class RpcdemoClient implements IRpcdemoClient, ServiceInfo {
    typeName = Rpcdemo.typeName;
    methods = Rpcdemo.methods;
    options = Rpcdemo.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateRpcDemo
     */
    createRpcDemo(input: CreateRpcDemoRequest, options?: RpcOptions): GrtpPromise<CreateRpcDemoRequest, CreateRpcDemoReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return executeGrtp<CreateRpcDemoRequest, CreateRpcDemoReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteRpcDemo
     */
    deleteRpcDemo(input: DeleteRpcDemoRequest, options?: RpcOptions): GrtpPromise<DeleteRpcDemoRequest, DeleteRpcDemoReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return executeGrtp<DeleteRpcDemoRequest, DeleteRpcDemoReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateRpcDemo
     */
    updateRpcDemo(input: UpdateRpcDemoRequest, options?: RpcOptions): GrtpPromise<UpdateRpcDemoRequest, UpdateRpcDemoReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return executeGrtp<UpdateRpcDemoRequest, UpdateRpcDemoReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SelectRpcDemo
     */
    selectRpcDemo(input: SelectRpcDemoRequest, options?: RpcOptions): GrtpPromise<SelectRpcDemoRequest, SelectRpcDemoReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return executeGrtp<SelectRpcDemoRequest, SelectRpcDemoReply>("unary", this._transport, method, opt, input);
    }
}
